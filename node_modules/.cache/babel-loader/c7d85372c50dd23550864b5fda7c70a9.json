{"ast":null,"code":"var _jsxFileName = \"/Users/btagaev/bektur.github.io/src/components/Details.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport facebookIcon from \"../icons/facebook.png\";\nimport instagramIcon from \"../icons/instagram.png\";\nimport twitterIcon from \"../icons/twitter.png\";\nimport telegramIcon from \"../icons/telegram.png\";\nimport redditIcon from \"../icons/reddit.png\";\nimport { Card } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { Chart } from \"chart.js\";\n/**\n * Display details about specific exchange\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Details(props) {\n  _s();\n\n  /**  exchange contains details about certain exchange */\n  const [coin, setCoin] = useState({});\n  const {\n    id\n  } = useParams();\n  /** fetch details only once for specific exchange */\n\n  useEffect(() => {\n    fetch(`https://api.coingecko.com/api/v3/coins/${id}`).then(response => response.json()).then(data => {\n      console.log(data);\n      setCoin(data);\n    });\n  }, []);\n\n  function renderChart() {\n    const ctx = document.getElementById('myChart').getContext('2d');\n    console.log(ctx);\n    var chart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        datasets: [{\n          data: [0, 0]\n        }, {\n          data: [0, 1]\n        }, {\n          data: [1, 0],\n          showLine: true // overrides the `line` dataset default\n\n        }, {\n          type: 'scatter',\n          // 'line' dataset default does not affect this dataset since it's a 'scatter'\n          data: [1, 1]\n        }]\n      }\n    });\n  }\n\n  renderChart();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myChart\",\n      width: \"400\",\n      height: \"300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Details, \"AMKDFVZt5PrW/KuLxz4U2myi7Jk=\", false, function () {\n  return [useParams];\n});\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/Users/btagaev/bektur.github.io/src/components/Details.js"],"names":["React","useEffect","useState","Table","facebookIcon","instagramIcon","twitterIcon","telegramIcon","redditIcon","Card","useParams","Chart","Details","props","coin","setCoin","id","fetch","then","response","json","data","console","log","renderChart","ctx","document","getElementById","getContext","chart","type","datasets","showLine"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,KAAT,QAAsB,UAAtB;AAEA;AACA;AACA;;;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEc,IAAAA;AAAF,MAASN,SAAS,EAAxB;AAEA;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,KAAK,CAAE,0CAAyCD,EAAG,EAA9C,CAAL,CACGE,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAN,MAAAA,OAAO,CAACM,IAAD,CAAP;AACD,KALH;AAMD,GAPQ,EAON,EAPM,CAAT;;AASA,WAASG,WAAT,GAAuB;AACrB,UAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,UAAnC,CAA8C,IAA9C,CAAZ;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACA,QAAII,KAAK,GAAG,IAAIlB,KAAJ,CAAUc,GAAV,EAAe;AACzBK,MAAAA,IAAI,EAAE,MADmB;AAEzBT,MAAAA,IAAI,EAAE;AACJU,QAAAA,QAAQ,EAAE,CAAC;AACTV,UAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ;AADG,SAAD,EAEP;AACCA,UAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ;AADP,SAFO,EAIP;AACCA,UAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,CADP;AAECW,UAAAA,QAAQ,EAAE,IAFX,CAEgB;;AAFhB,SAJO,EAOP;AACCF,UAAAA,IAAI,EAAE,SADP;AACkB;AACjBT,UAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFP,SAPO;AADN;AAFmB,KAAf,CAAZ;AAgBD;;AACDG,EAAAA,WAAW;AACX,sBACE;AAAA,2BACE;AAAQ,MAAA,EAAE,EAAC,SAAX;AAAqB,MAAA,KAAK,EAAC,KAA3B;AAAiC,MAAA,MAAM,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAzCQZ,O;UAGQF,S;;;KAHRE,O;AA2CT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport facebookIcon from \"../icons/facebook.png\";\nimport instagramIcon from \"../icons/instagram.png\";\nimport twitterIcon from \"../icons/twitter.png\";\nimport telegramIcon from \"../icons/telegram.png\";\nimport redditIcon from \"../icons/reddit.png\";\nimport { Card } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { Chart } from \"chart.js\";\n\n/**\n * Display details about specific exchange\n */\nfunction Details(props) {\n  /**  exchange contains details about certain exchange */\n  const [coin, setCoin] = useState({});\n  const { id } = useParams();\n\n  /** fetch details only once for specific exchange */\n  useEffect(() => {\n    fetch(`https://api.coingecko.com/api/v3/coins/${id}`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setCoin(data);\n      });\n  }, []);\n\n  function renderChart() {\n    const ctx = document.getElementById('myChart').getContext('2d');\n    console.log(ctx);\n    var chart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        datasets: [{\n          data: [0, 0],\n        }, {\n            data: [0, 1]\n        }, {\n            data: [1, 0],\n            showLine: true // overrides the `line` dataset default\n        }, {\n            type: 'scatter', // 'line' dataset default does not affect this dataset since it's a 'scatter'\n            data: [1, 1]\n        }]\n      }\n    });\n  }\n  renderChart();\n  return (\n    <div>\n      <canvas id=\"myChart\" width=\"400\" height=\"300\"></canvas>\n    </div>\n  );\n}\n\nexport default Details;\n"]},"metadata":{},"sourceType":"module"}