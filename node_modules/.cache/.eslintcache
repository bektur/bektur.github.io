[{"/Users/btagaev/bektur.github.io/src/index.js":"1","/Users/btagaev/bektur.github.io/src/App.js":"2","/Users/btagaev/bektur.github.io/src/components/Details.js":"3","/Users/btagaev/bektur.github.io/src/components/DisplayPage.js":"4","/Users/btagaev/bektur.github.io/src/components/Header.js":"5","/Users/btagaev/bektur.github.io/src/components/IntroSection.js":"6"},{"size":219,"mtime":1648621743686,"results":"7","hashOfConfig":"8"},{"size":1236,"mtime":1648626768841,"results":"9","hashOfConfig":"8"},{"size":5172,"mtime":1648627479705,"results":"10","hashOfConfig":"8"},{"size":2928,"mtime":1648621553022,"results":"11","hashOfConfig":"8"},{"size":1027,"mtime":1648621551166,"results":"12","hashOfConfig":"8"},{"size":257,"mtime":1648621554339,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x2mm20",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/btagaev/bektur.github.io/src/index.js",[],[],"/Users/btagaev/bektur.github.io/src/App.js",["35","36","37"],[],"import React, { useEffect, useState } from \"react\";\nimport DisplayPage from \"./components/DisplayPage\";\nimport Details from \"./components/Details\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport Header from \"./components/Header\";\nimport data from './data.json';\n\n/**\n * Main application component \n */\nfunction App() {\n  // Api request result will be saved for exchanges\n  const [coins, setExchange] = useState([]);\n  const [currency, setCurrency] = useState('USD');\n\n\n    useEffect(() => {\n      fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setExchange(data.slice(0, 10));\n      });\n    }, []);\n\n  return (\n    <>\n      <Header />\n      <div style={{height: '50px'}}></div>\n      \n      <Router history={createBrowserHistory()}>\n        <Routes>          \n          <Route exact path=\"/\" element={<DisplayPage data={coins} currency={currency}/>} />\n\n          <Route exact path=\"/details/:id\" element={<Details currency={currency} />} />\n\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","/Users/btagaev/bektur.github.io/src/components/Details.js",["38","39","40","41"],[],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart, registerables } from \"chart.js\";\nimport { currencySymbolMap } from \"currency-symbol-map\";\nimport webIcon from '../static/media/web.png';\n\n/**\n * Display details about specific exchange\n */\nfunction Details(props) {\n  /**  exchange contains details about certain exchange */\n  const { currency } = props;\n  const [coin, setCoin] = useState({});\n  const { id } = useParams();\n  const SI = [\"\", \"k\", \"M\", \"B\", \"T\", \"P\", \"E\"];\n  Chart.register(...registerables);\n\n  /** fetch details only once for specific exchange */\n  useEffect(() => {\n    fetch(`https://api.coingecko.com/api/v3/coins/${id}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setCoin(data);\n        var desc = document.getElementById('desc');\n        desc.innerHTML = '<p>'+ data.description['en'] +'</p>';\n      });      \n  }, [id]);\n\n  function formatNumber(number) {\n    // what tier? (determines SI symbol)\n    const tier = Math.log10(Math.abs(number)) / 3 | 0;\n\n    // if zero, we don't need a suffix\n    if(tier == 0) return number;\n\n    // get suffix and determine scale\n    const suffix = SI[tier];\n    const scale = Math.pow(10, tier * 3);\n\n    // scale the number\n    const scaled = number / scale;\n\n    // format number and add suffix\n    return scaled.toFixed(1) + suffix;\n  }\n\n  if (! coin.market_data) {\n    return <div />;\n  }\n\n  const { description, market_data, market_cap_rank, symbol, links: { homepage } } = coin;\n  const { \n    current_price, \n    ath,\n    price_change_percentage_24h, \n    market_cap, \n    circulating_supply, \n    price_change_percentage_1h_in_currency, \n    price_change_percentage_7d \n  } = market_data;\n\n  console.log(coin);\n  return (\n    <>    \n    <section className=\"section-table\">\n      <div className=\"section-left\">\n        <Line \n          datasetIdKey=\"id\"\n          data={{\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            datasets: [\n              {\n                id: 1,\n                label: coin.name,\n                data: [\n                  // coin.market_data.current_price.currency - coin.market_data.price_change_percentage_1y_in_currency.currency, \n                  // coin.market_data.current_price.currency\n                ],\n              }\n            ]\n          }}\n        />\n      </div>\n    </section>\n    <section className=\"section-table\">\n      <div className=\"section-left\">\n        <div className=\"section-info\">\n          <h4>Market Stats</h4>\n          <div className=\"subsection-info\">\n            <div>\n              <div>Market Cap</div>\n              <div><strong>{`${currencySymbolMap[currency]}${formatNumber(market_cap[currency.toLowerCase()])}`}</strong></div>\n            </div>\n            <div>\n              <div>Volume(24h)</div>\n              <div><strong>{`${currencySymbolMap[currency]}`}</strong></div>\n            </div>\n            <div>\n              <div>Circulating supply</div>\n              <div><strong>{`${formatNumber(circulating_supply)} ${symbol.toUpperCase()}`}</strong></div>\n            </div>\n            <div>\n              <div>Typical hold time</div>\n              <div><strong>Typical</strong></div>\n            </div>\n          </div>\n          <div className=\"subsection-info\">\n            <div>\n              <div>Trading activity</div>    \n              <div><strong>62% buy 38% sell</strong></div>        \n            </div>\n            <div>\n              <div>Popularity</div>\n              <div><strong>#{market_cap_rank}</strong></div>\n            </div>\n            <div></div>\n          </div>\n          <div className=\"subsection-info\">\n            <div>\n              <div>All time high</div>\n              <div><strong>{`${currencySymbolMap[currency]}${formatNumber(ath[currency.toLowerCase()])}`}</strong></div>\n            </div>\n            <div>\n              <div>Price change (1h)</div>\n              <div><strong>{`${Number.parseFloat(price_change_percentage_1h_in_currency[currency.toLowerCase()]).toFixed(2)}%`}</strong></div>\n            </div>\n            <div>\n              <div>Price change (24h)</div>\n              <div><strong>{`${Number.parseFloat(price_change_percentage_24h).toFixed(2)}%`}</strong></div>\n            </div>\n            <div>\n              <div>Price change (7d)</div>\n              <div><strong>{`${Number.parseFloat(price_change_percentage_7d).toFixed(2)}%`}</strong></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <section className=\"section-table\">\n      <div className=\"section-left\">\n        <div className=\"section-info\">\n          <h3>About Bitcoin</h3>\n          <div className=\"subsection-info\" id=\"desc\">\n            \n          </div>\n          <div className=\"subsection-info links\">\n            <div>Resources</div> \n            <div><img src={webIcon} className=\"icon\"/><a href={homepage[0]}>Official website</a></div>            \n          </div>\n        </div>\n      </div>\n    </section>\n    </>\n  );\n}\n\nexport default Details;\n","/Users/btagaev/bektur.github.io/src/components/DisplayPage.js",["42","43","44"],[],"import React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { Chart } from \"chart.js\";\nimport IntroSection from \"./IntroSection\";\n\n/**\n * Display home page, list of exchanges \n */\nfunction DisplayPage(props) {\n  /** data contains list of exchanges, passed from App.js */\n  const { data, currency } = props;\n\n  function handleOnClick(id) {    \n  }\n\n  function renderChart(id) {\n    const ctx = document.getElementById('myChart-'+ id).getContext('2d');\n    console.log(ctx);\n    var chart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        datasets: [{\n          data: [0, 0],\n        }, {\n            data: [0, 1]\n        }, {\n            data: [1, 0],\n            showLine: true // overrides the `line` dataset default\n        }, {\n            type: 'scatter', // 'line' dataset default does not affect this dataset since it's a 'scatter'\n            data: [1, 1]\n        }]\n      }\n    });\n    chart.destroy();\n  }\n\n  return (\n      <>\n        <IntroSection />      \n        <section className=\"section-table\">        \n          <Table className=\"table\">\n            <thead>\n              <tr>\n                <th className=\"center\">#</th>\n                <th className=\"align-left\">Name</th>\n                <th className=\"align-left\">Price</th>\n                <th className=\"align-left\">Change</th>\n                <th className=\"align-left\">Chart</th>\n                <th className=\"align-left\">Trade</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.keys(data).map((index) => (\n                <tr key={data[index].id}>\n                  <td className=\"center\">{data[index].market_cap_rank}</td>\n                  <td className=\"align-left\">\n                    <img style={{ width: \"30px\" }} src={data[index].image} />\n                    <a href={`/details/${data[index].id}`} style={{textDecoration: 'unset'}}>\n                      <span className=\"name\">\n                          {`${data[index].name} ${data[index].symbol.toUpperCase()}`}                    \n                      </span>\n                    </a>                  \n                  </td>\n                  <td className=\"align-left\"><span className=\"price\">{`${currency} ${new Intl.NumberFormat().format(Number.parseFloat(data[index].current_price).toFixed(2))}`}</span></td>\n                  <td className=\"align-left\"><span className=\"percentage\">{`${Number.parseFloat(data[index].price_change_percentage_24h).toFixed(2)}%`}</span></td>\n                  <td className=\"align-left\"><canvas id={`myChart-${data[index].id}`} width=\"60\" height=\"30\"></canvas></td>\n                  <td className=\"align-left\"><a href={`/details/${data[index].id}`}><button className=\"buy-button\"><span style={{color: 'white'}}>Buy</span></button></a></td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </section>\n      </>\n  );\n}\n\nexport default DisplayPage;\n","/Users/btagaev/bektur.github.io/src/components/Header.js",[],[],"/Users/btagaev/bektur.github.io/src/components/IntroSection.js",[],[],{"ruleId":"45","severity":1,"message":"46","line":11,"column":8,"nodeType":"47","messageId":"48","endLine":11,"endColumn":12},{"ruleId":"45","severity":1,"message":"49","line":19,"column":20,"nodeType":"47","messageId":"48","endLine":19,"endColumn":31},{"ruleId":"50","severity":1,"message":"51","line":29,"column":8,"nodeType":"52","endLine":29,"endColumn":10,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":35,"column":13,"nodeType":"56","messageId":"57","endLine":35,"endColumn":15},{"ruleId":"45","severity":1,"message":"58","line":52,"column":11,"nodeType":"47","messageId":"48","endLine":52,"endColumn":22},{"ruleId":"45","severity":1,"message":"59","line":54,"column":5,"nodeType":"47","messageId":"48","endLine":54,"endColumn":18},{"ruleId":"60","severity":1,"message":"61","line":149,"column":18,"nodeType":"62","endLine":149,"endColumn":55},{"ruleId":"45","severity":1,"message":"63","line":13,"column":12,"nodeType":"47","messageId":"48","endLine":13,"endColumn":25},{"ruleId":"45","severity":1,"message":"64","line":16,"column":12,"nodeType":"47","messageId":"48","endLine":16,"endColumn":23},{"ruleId":"60","severity":1,"message":"61","line":58,"column":21,"nodeType":"62","endLine":58,"endColumn":78},"no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","'setCurrency' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currency'. Either include it or remove the dependency array.","ArrayExpression",["65"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'description' is assigned a value but never used.","'current_price' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'handleOnClick' is defined but never used.","'renderChart' is defined but never used.",{"desc":"66","fix":"67"},"Update the dependencies array to be: [currency]",{"range":"68","text":"69"},[817,819],"[currency]"]